{"version":3,"file":"VideoSource.styled-81ae8d6c.js","sources":["../../src/hooks/useAssetDocumentValues.ts","../../src/hooks/useClient.ts","../../src/util/readSecrets.ts","../../src/util/generateJwt.ts","../../src/util/getPlaybackId.ts","../../src/util/getPlaybackPolicy.ts","../../src/util/getAnimatedPosterSrc.ts","../../src/util/getPosterSrc.ts","../../src/components/VideoSource.styled.tsx"],"sourcesContent":["import {isReference} from 'sanity'\nimport {useDocumentValues} from 'sanity'\n\nimport type {Reference, VideoAssetDocument} from '../util/types'\n\nconst path = ['assetId', 'data', 'playbackId', 'status', 'thumbTime', 'filename']\nexport const useAssetDocumentValues = (asset: Reference | null | undefined) =>\n  useDocumentValues<VideoAssetDocument | null | undefined>(\n    isReference(asset) ? asset._ref! : '',\n    path\n  )\n","// As it's required to specify the API Version this custom hook ensures it's all using the same version\nimport {useClient as useSanityClient} from 'sanity'\n\nexport function useClient() {\n  return useSanityClient({apiVersion: '2022-09-14'})\n}\n","// Utils with a readName prefix are suspendable and should only be called in the render body\n// Not inside event callbacks or a useEffect.\n// They may be called dynamically, unlike useEffect\n\n// @TODO rename to readSigningPair\n\nimport type {SanityClient} from 'sanity'\nimport {suspend} from 'suspend-react'\n\nimport {cacheNs} from '../util/constants'\nimport {type Secrets} from '../util/types'\n\nexport const _id = 'secrets.mux' as const\n\nexport function readSecrets(client: SanityClient): Secrets {\n  const {projectId, dataset} = client.config()\n  return suspend(async () => {\n    const data = await client.fetch(\n      /* groq */ `*[_id == $_id][0]{\n        token,\n        secretKey,\n        enableSignedUrls,\n        signingKeyId,\n        signingKeyPrivate\n      }`,\n      {_id}\n    )\n    return {\n      token: data?.token || null,\n      secretKey: data?.secretKey || null,\n      enableSignedUrls: Boolean(data?.enableSignedUrls) || false,\n      signingKeyId: data?.signingKeyId || null,\n      signingKeyPrivate: data?.signingKeyPrivate || null,\n    }\n  }, [cacheNs, _id, projectId, dataset])\n}\n","import type {SanityClient} from 'sanity'\nimport {suspend} from 'suspend-react'\n\nimport {readSecrets} from './readSecrets'\nimport type {AnimatedThumbnailOptions, ThumbnailOptions} from './types'\n\nexport type Audience = 'g' | 's' | 't' | 'v'\n\nexport type Payload<T extends Audience> = T extends 'g'\n  ? AnimatedThumbnailOptions\n  : T extends 's'\n  ? never\n  : T extends 't'\n  ? ThumbnailOptions\n  : T extends 'v'\n  ? never\n  : never\n\nexport function generateJwt<T extends Audience>(\n  client: SanityClient,\n  playbackId: string,\n  aud: T,\n  payload?: Payload<T>\n): string {\n  const {signingKeyId, signingKeyPrivate} = readSecrets(client)\n  if (!signingKeyId) {\n    throw new TypeError('Missing signingKeyId')\n  }\n  if (!signingKeyPrivate) {\n    throw new TypeError('Missing signingKeyPrivate')\n  }\n\n  const {default: sign} = suspend(() => import('jsonwebtoken-esm'), ['jsonwebtoken-esm'])\n\n  return sign(\n    payload ? JSON.parse(JSON.stringify(payload, (_, v) => v ?? undefined)) : {},\n    atob(signingKeyPrivate),\n    {\n      algorithm: 'RS256',\n      keyid: signingKeyId,\n      audience: aud,\n      subject: playbackId,\n      noTimestamp: true,\n      expiresIn: '12h',\n    }\n  )\n}\n","import type {VideoAssetDocument} from './types'\n\nexport function getPlaybackId(asset: VideoAssetDocument): string {\n  if (!asset?.playbackId) {\n    console.error('Asset is missing a playbackId', {asset})\n    throw new TypeError(`Missing playbackId`)\n  }\n  return asset.playbackId\n}\n","import type {PlaybackPolicy, VideoAssetDocument} from './types'\n\nexport function getPlaybackPolicy(asset: VideoAssetDocument): PlaybackPolicy {\n  return asset.data?.playback_ids?.[0]?.policy ?? 'public'\n}\n","import type {SanityClient} from 'sanity'\n\nimport {generateJwt} from './generateJwt'\nimport {getPlaybackId} from './getPlaybackId'\nimport {getPlaybackPolicy} from './getPlaybackPolicy'\nimport type {AnimatedThumbnailOptions, MuxAnimatedThumbnailUrl, VideoAssetDocument} from './types'\n\nexport interface AnimatedPosterSrcOptions extends AnimatedThumbnailOptions {\n  asset: VideoAssetDocument\n  client: SanityClient\n}\n\nexport function getAnimatedPosterSrc({\n  asset,\n  client,\n  height,\n  width,\n  start = asset.thumbTime ? Math.max(0, asset.thumbTime - 2.5) : 0,\n  end = start + 5,\n  fps = 15,\n}: AnimatedPosterSrcOptions): MuxAnimatedThumbnailUrl {\n  const params = {height, width, start, end, fps}\n  const playbackId = getPlaybackId(asset)\n\n  let searchParams = new URLSearchParams(\n    JSON.parse(JSON.stringify(params, (_, v) => v ?? undefined))\n  )\n  if (getPlaybackPolicy(asset) === 'signed') {\n    const token = generateJwt(client, playbackId, 'g', params)\n    searchParams = new URLSearchParams({token})\n  }\n\n  return `https://image.mux.com/${playbackId}/animated.gif?${searchParams}`\n}\n","import type {SanityClient} from 'sanity'\n\nimport {generateJwt} from './generateJwt'\nimport {getPlaybackId} from './getPlaybackId'\nimport {getPlaybackPolicy} from './getPlaybackPolicy'\nimport type {MuxThumbnailUrl, ThumbnailOptions, VideoAssetDocument} from './types'\n\nexport interface PosterSrcOptions extends ThumbnailOptions {\n  asset: VideoAssetDocument\n  client: SanityClient\n}\n\nexport function getPosterSrc({\n  asset,\n  client,\n  fit_mode,\n  height,\n  time = asset.thumbTime,\n  width,\n}: PosterSrcOptions): MuxThumbnailUrl {\n  const params = {fit_mode, height, time, width}\n  const playbackId = getPlaybackId(asset)\n\n  let searchParams = new URLSearchParams(\n    JSON.parse(JSON.stringify(params, (_, v) => v ?? undefined))\n  )\n  if (getPlaybackPolicy(asset) === 'signed') {\n    const token = generateJwt(client, playbackId, 't', params)\n    searchParams = new URLSearchParams({token})\n  }\n\n  return `https://image.mux.com/${playbackId}/thumbnail.png?${searchParams}`\n}\n","import {LockIcon, UnknownIcon} from '@sanity/icons'\nimport {Box, Card, Grid, Inline, Spinner} from '@sanity/ui'\nimport React, {memo, Suspense, useMemo} from 'react'\nimport {MediaPreview} from 'sanity'\nimport styled from 'styled-components'\nimport {suspend} from 'suspend-react'\nimport {useErrorBoundary} from 'use-error-boundary'\n\nimport {useClient} from '../hooks/useClient'\nimport {getAnimatedPosterSrc} from '../util/getAnimatedPosterSrc'\nimport {getPlaybackPolicy} from '../util/getPlaybackPolicy'\nimport {getPosterSrc} from '../util/getPosterSrc'\nimport type {VideoAssetDocument} from '../util/types'\n\nconst mediaDimensions = {aspect: 16 / 9}\n\ninterface ImageLoaderProps {\n  alt: string\n  src: string\n  height?: number\n  width: number\n  aspectRatio?: string\n}\nconst ImageLoader = memo(function ImageLoader({\n  alt,\n  src,\n  height,\n  width,\n  aspectRatio,\n}: ImageLoaderProps) {\n  suspend(async () => {\n    const img = new Image(width, height)\n    img.decoding = 'async'\n    img.src = src\n    await img.decode()\n  }, ['sanity-plugin-mux-input', 'image', src])\n\n  return <img alt={alt} src={src} height={height} width={width} style={{aspectRatio}} />\n})\n\n// @TODO fix typings errors due to props.renderDefault\nconst VideoMediaPreview = styled<any>(MediaPreview)`\n  img {\n    object-fit: cover;\n  }\n`\n\ninterface VideoMediaPreviewSignedSubtitleProps {\n  solo?: boolean\n}\nconst VideoMediaPreviewSignedSubtitle = ({solo}: VideoMediaPreviewSignedSubtitleProps) => {\n  return (\n    <Inline\n      space={1}\n      style={{\n        marginTop: solo ? '-1.35em' : undefined,\n        marginBottom: solo ? undefined : '0.35rem',\n      }}\n    >\n      <LockIcon />\n      Signed playback policy\n    </Inline>\n  )\n}\n\ninterface PosterImageProps extends Omit<ImageLoaderProps, 'src' | 'alt'> {\n  asset: VideoAssetDocument\n  showTip?: boolean\n}\nconst PosterImage = ({asset, height, width, showTip}: PosterImageProps) => {\n  const client = useClient()\n  const src = getPosterSrc({\n    asset,\n    client,\n    height,\n    width,\n    fit_mode: 'smartcrop',\n  })\n  const subtitle = useMemo(\n    () =>\n      showTip && getPlaybackPolicy(asset) === 'signed' ? (\n        <VideoMediaPreviewSignedSubtitle solo />\n      ) : undefined,\n    [asset, showTip]\n  )\n\n  // eslint-disable-next-line no-warning-comments\n  // @TODO support setting the alt text in the schema, like how we deal with images\n  return (\n    <VideoMediaPreview\n      mediaDimensions={mediaDimensions}\n      subtitle={subtitle}\n      title={<>{null}</>}\n      media={<ImageLoader alt=\"\" src={src} height={height} width={width} />}\n    />\n  )\n}\n\nexport interface VideoThumbnailProps extends Omit<PosterImageProps, 'height'> {\n  width: number\n}\nexport const VideoThumbnail = memo(function VideoThumbnail({\n  asset,\n  width,\n  showTip,\n}: VideoThumbnailProps) {\n  const {ErrorBoundary, didCatch, error} = useErrorBoundary()\n  const height = Math.round((width * 9) / 16)\n  const subtitle = useMemo(\n    () =>\n      showTip && getPlaybackPolicy(asset) === 'signed' ? (\n        <VideoMediaPreviewSignedSubtitle />\n      ) : undefined,\n    [showTip, asset]\n  )\n\n  if (didCatch) {\n    return (\n      <VideoMediaPreview\n        subtitle={error.message}\n        mediaDimensions={mediaDimensions}\n        title=\"Error when loading thumbnail\"\n        media={\n          <Card radius={2} height=\"fill\" style={{position: 'relative', width: '100%'}}>\n            <Box\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n              }}\n            >\n              <UnknownIcon />\n            </Box>\n          </Card>\n        }\n      />\n    )\n  }\n\n  return (\n    <ErrorBoundary>\n      <Suspense\n        fallback={\n          <VideoMediaPreview\n            isPlaceholder\n            title=\"Loading thumbnail...\"\n            subtitle={subtitle}\n            mediaDimensions={mediaDimensions}\n          />\n        }\n      >\n        <PosterImage showTip={showTip} asset={asset} height={height} width={width} />\n      </Suspense>\n    </ErrorBoundary>\n  )\n})\n\n// @TODO fix typings errors due to props.renderDefault\nconst AnimatedVideoMediaPreview = styled<any>(MediaPreview)`\n  img {\n    object-fit: contain;\n  }\n`\n\ninterface AnimatedPosterImageProps extends Omit<ImageLoaderProps, 'src' | 'alt' | 'height'> {\n  asset: VideoAssetDocument\n}\nconst AnimatedPosterImage = ({asset, width}: AnimatedPosterImageProps) => {\n  const client = useClient()\n  const src = getAnimatedPosterSrc({asset, client, width})\n\n  // eslint-disable-next-line no-warning-comments\n  // @TODO support setting the alt text in the schema, like how we deal with images\n  return (\n    <AnimatedVideoMediaPreview\n      withBorder={false}\n      mediaDimensions={mediaDimensions}\n      media={<ImageLoader alt=\"\" src={src} width={width} aspectRatio=\"16:9\" />}\n    />\n  )\n}\n\nexport interface AnimatedVideoThumbnailProps extends Omit<PosterImageProps, 'height'> {\n  width: number\n}\nexport const AnimatedVideoThumbnail = memo(function AnimatedVideoThumbnail({\n  asset,\n  width,\n}: AnimatedVideoThumbnailProps) {\n  const {ErrorBoundary, didCatch} = useErrorBoundary()\n\n  if (didCatch) {\n    return null\n  }\n\n  return (\n    <ErrorBoundary>\n      <Suspense\n        fallback={\n          <FancyBackdrop>\n            <VideoMediaPreview\n              mediaDimensions={mediaDimensions}\n              withBorder={false}\n              media={<Spinner muted />}\n            />\n          </FancyBackdrop>\n        }\n      >\n        <Card height=\"fill\" tone=\"transparent\">\n          <AnimatedPosterImage asset={asset} width={width} />\n        </Card>\n      </Suspense>\n    </ErrorBoundary>\n  )\n})\nconst FancyBackdrop = styled(Box)`\n  backdrop-filter: blur(8px) brightness(0.5) saturate(2);\n  mix-blend-mode: color-dodge;\n`\n\nexport const ThumbGrid = styled(Grid)`\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n`\n\nexport const CardLoadMore = styled(Card)`\n  border-top: 1px solid var(--card-border-color);\n  position: sticky;\n  bottom: 0;\n  z-index: 200;\n`\n"],"names":["path","useAssetDocumentValues","asset","useDocumentValues","isReference","_ref","useClient","useSanityClient","apiVersion","_id","readSecrets","client","projectId","dataset","config","suspend","data","fetch","token","secretKey","enableSignedUrls","Boolean","signingKeyId","signingKeyPrivate","cacheNs","generateJwt","playbackId","aud","payload","TypeError","default","sign","JSON","parse","stringify","_","v","atob","algorithm","keyid","audience","subject","noTimestamp","expiresIn","getPlaybackId","console","error","getPlaybackPolicy","_a","_b","_c","_d","playback_ids","policy","getAnimatedPosterSrc","height","width","start","thumbTime","Math","max","end","fps","params","searchParams","URLSearchParams","concat","getPosterSrc","_ref2","fit_mode","time","mediaDimensions","aspect","ImageLoader","memo","ImageLoader2","_ref3","alt","src","aspectRatio","img","Image","decoding","decode","jsx","style","VideoMediaPreview","styled","MediaPreview","_templateObject","_taggedTemplateLiteral","VideoMediaPreviewSignedSubtitle","_ref4","solo","jsxs","Inline","space","marginTop","marginBottom","children","LockIcon","PosterImage","_ref5","showTip","subtitle","useMemo","title","media","VideoThumbnail","VideoThumbnail2","_ref6","ErrorBoundary","didCatch","useErrorBoundary","round","message","Card","radius","position","Box","display","justifyContent","alignItems","top","left","right","bottom","UnknownIcon","Suspense","fallback","isPlaceholder","AnimatedVideoMediaPreview","_templateObject2","AnimatedPosterImage","_ref7","withBorder","AnimatedVideoThumbnail","AnimatedVideoThumbnail2","_ref8","FancyBackdrop","Spinner","muted","tone","_templateObject3","ThumbGrid","Grid","_templateObject4","CardLoadMore","_templateObject5"],"mappings":"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"}